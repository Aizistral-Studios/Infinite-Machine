import com.bmuschko.gradle.docker.tasks.image.Dockerfile

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "io.freefair.gradle:lombok-plugin:5.3.3.3"
  }
}

plugins {
    id 'com.bmuschko.docker-remote-api' version '3.2.3'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'io.freefair.lombok'

repositories {
	flatDir {
		dirs 'deps'
	}
	mavenCentral()
}

dependencies {
	compile name: 'commons-io-2.4'
	compile name: 'guava-17.0'
	compile name: 'gson-2.8.0'
	compile name: 'asm-debug-all-5.2'
	compile 'org.slf4j:slf4j-api:2.0.7'
	compile 'ch.qos.logback:logback-classic:1.3.6'
	compile 'net.dv8tion:JDA:5.0.0-beta.11'
}

compileJava {
	outputs.upToDateWhen { false }
	options.compilerArgs << '-XDignore.symbol.file'
	options.fork = true
	options.forkOptions.executable = 'javac'
}

jar {
	classifier = 'bin'
	baseName = archivesBaseName
}

task fatJar(type: Jar, dependsOn: 'jar') {
    inputs.file jar.archivePath
    from(configurations.compile.collect { zipTree(it).matching { exclude 'META-INF/**' } })
    classifier = 'all'
	baseName = archivesBaseName
}

tasks.withType(Jar) {
	manifest {
        attributes([
            "Main-Class": "com.aizistral.infmachine.Main"
        ])
    }
}

fatJar.doFirst {
    from zipTree(jar.archivePath)
}

artifacts {
    archives fatJar
}

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/docker/Dockerfile')
    from 'openjdk:8-jre-alpine'
    maintainer 'Aizistral "admin@aizistral.com"'
    copyFile fatJar.archiveName, '/infinite-machine/InfiniteMachine.jar'
    defaultCommand 'java', '-jar', '/infinite-machine/InfiniteMachine.jar'
}

task syncWebAppArchive(type: Sync) {
    dependsOn assemble
    from fatJar.archivePath
    into createDockerfile.destFile.parentFile
}

createDockerfile.dependsOn syncWebAppArchive
fatJar.finalizedBy createDockerfile